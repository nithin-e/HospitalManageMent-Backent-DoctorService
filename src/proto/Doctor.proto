syntax = "proto3";

package Doctor;

service DoctorService {
  
  rpc StoreAppointmentSlots(StoreAppointmentSlotsRequest) returns (StoreAppointmentSlotsResponse) {}

  rpc fetchingDoctorSlots (fetchingDoctorSlotsRequest) returns (fetchingDoctorSlotsResponse) {}

  rpc fetchingAppontMentSlotes (fetchingAppontMentSlotesRequest) returns (fetchingAppontMentSlotesResponse) {}

  rpc StoreAppointMent  (StoreAppointMentRequest) returns (StoreAppointMentResponse) {}

  rpc fectingUserAppointMents (fectingUserAppointMentsRequestt) returns (fetchingUserAppointmentsResponsee) {}

rpc fectingAllUserAppointMents(fectingUserAppointMentsRequest) returns (fectingAllUserAppointMentsResponse) {}

  rpc RescheduleAppointment(RescheduleAppointmentRequest) returns (RescheduleAppointmentResponse) {}

  rpc CancelUserAppointMent (CancelUserAppointMentRequest) returns (CancelUserAppointMentResponse) {}

  rpc StoreMessage(StoreMessageRequest) returns (StoreMessageResponse) {}


  rpc fetchingConversations(fetchingConversationsRequest) returns (fetchingConversationsResponse) {}

 rpc AppointmentCancelingDueToUser (cancellingAppointmentDueToUserRequest) returns (cancellingAppointmentDueToUserResponse) {} 

 rpc AfterTheConsultationUpdatingAppointMent (AfterTheConsultationRequest) returns (AfterTheConsultationResponse) {} 

 rpc makingAddPrescription(makingAddPrescriptionRequest) returns ( makingAddPrescriptionResponse) {} 

 rpc fetchingPrescription (fetchingPrescriptionRequest) returns (fetchingPrescriptionResponse) {}

 rpc doctorCancellingUserBookedAppointMent (doctorCancellingUserBookedAppointMentRequest) returns (doctorCancellingUserBookedAppointMentResponse) {}

 rpc addNewService (addNewServiceRequest)returns (addNewServiceResponse){}

 rpc fetchService (fetchServicesRequest) returns (fetchServicesResponse) {}

 rpc deleteService (deleteServiceRequest) returns (deleteServiceResponse) {}

 rpc editService (editServiceRequest) returns (editServiceResponce) {}


}



message editServiceRequest{
string serviceId = 1;
string name = 2;
string description = 3;

}

message editServiceResponce {
  bool success =1;
}



message deleteServiceRequest {
   string serviceId =1;
}

message deleteServiceResponse {
  bool success =1;
}


message fetchServicesRequest {

}


message Service {
  string id = 1;
  string name = 2;
  string description = 3;
  string createdAt = 4;
  string updatedAt = 5;
 
}

message fetchServicesResponse {
  repeated Service services = 1;
}


message addNewServiceRequest{
  string name = 1;
  string description =2;
}


message addNewServiceResponse {
  bool success =1;
}


message doctorCancellingUserBookedAppointMentRequest {
  string id = 1;
  string doctor_id =2;
  string  date =3;
  string time =4;
  bool is_booked =5;
  string patientEmail =6;
}


message doctorCancellingUserBookedAppointMentResponse {
  bool success= 1;
}

message fetchingPrescriptionRequest {
   string doctorId = 1 ;
   string userIdd = 2 ;
   string appointmentId =3 ;
   string date = 4;
   string time =5 ;

}

message fetchingPrescriptionResponse {
  string prescriptionDetails = 1 ;
  string date = 2 ;
  string time = 3 ;
  string patientEmail = 4 ;
  string doctorEmail = 5 ;
}

message makingAddPrescriptionRequest{

string doctorId=1;
string patientId=2;
string appointmentId =3 ;
string prescriptionDetails =4 ;
string date =5 ;
string time = 6 ;

}


message makingAddPrescriptionResponse{
bool success = 1;
}


message AfterTheConsultationRequest {
 string appointmentId = 1;
 string endedBy =2;
}

message AfterTheConsultationResponse {
 bool success = 1;
 string patientEmail =2;
}



message cancellingAppointmentDueToUserRequest {
  string appointmentId = 1;
}

message cancellingAppointmentDueToUserResponse {
   bool success = 1;
}



message fetchingConversationsRequest {

  string userId = 1 ; 
  string doctorId = 2 ;

}


message MessageInfo {
  string messageId = 1;
  string senderId = 2;
  string receiverId = 3;
  string appointmentId = 4;
  string messageType = 5;
  string content = 6;
  string senderType = 7;
  string fileUrl = 8;
  string timestamp = 9;
  string createdAt = 10;
  string updatedAt = 11;
}





message ConversationInfo {
  string conversationId = 1;
  repeated string participants = 2;
  string appointmentId = 3;
  string lastMessage = 4;
  string lastMessageType = 5;
  string lastMessageTimestamp = 6;
  repeated MessageInfo messages = 7;
}

message fetchingConversationsResponse {
  bool success = 1;
  repeated ConversationInfo conversations = 2;
  string message = 3;
}




message StoreMessageRequest {
  string appointmentId = 1;
  string messageType = 2;      
  string content = 3;
  string senderType = 4;       
  string timestamp = 5;
  string senderId = 8;
  string fileUrl = 9 ;  
  string receverId = 10 ;      
}


message StoreMessageResponse {
  bool success = 1;
  string message = 2;
  string messageId = 3;
  string conversationId = 4;
  string doctorId=5;
}



message CancelUserAppointMentRequest {
string time = 1;
string date = 2;
string email =3 ;
}

message CancelUserAppointMentResponse {
  bool success = 1;
}



message RescheduleAppointmentRequest {
  string action = 1;                   
  string patientEmail = 2;              
  string doctorEmail = 3;               
  OriginalSlot originalSlot = 4;       
  NewSlot newSlot = 5;                  
}

message OriginalSlot {
  string id = 1;                        
  string date = 2;                      
  string time = 3;                      
  string doctor_id = 4;                 
}

message NewSlot {
  string id = 1;                        
  string time24 = 2;                    
  string time12 = 3;                  
  bool available = 4;                   
}

message RescheduleAppointmentResponse {
  bool success = 1;                    
  string message = 2;                  
  string appointment_id = 3;            
  string new_time = 4;              
  string date = 5;                    
}


message Appointment {
  string id = 1;
  string patientName = 2;
  string doctorEmail = 3;
  string patientPhone = 4;
  string appointmentDate = 5;  
  string appointmentTime = 6; 
  string notes = 7;
  string doctorName = 8;
  string specialty = 9;
  string patientEmail = 10;
  string status = 11;
  string message =12;
  string payment_method = 13 ;
  string paymentStatus = 14 ;
  string amount = 15 ;
  string doctorAmount = 16;
  string adminAmount = 17 ;
  string userRefoundAmount = 18 ;
  string userId = 19 ;
  string doctorId = 20 ;
  string Prescription = 21;
}

message fectingUserAppointMentsRequest {
  int32 page = 1;
  int32 limit = 2;
}

message fectingAllUserAppointMentsResponse {
  repeated Appointment appointments = 1;
  bool success = 2;
  string message = 3;
  int32 currentPage = 4;
  int32 totalPages = 5;
  int32 totalAppointments = 6;
  int32 limit = 7;
  bool hasNextPage = 8;
  bool hasPrevPage = 9;
}



message fetchingUserAppointmentsResponse {
  repeated Appointment appointments = 1;
  bool success = 2;
  string message = 3;
}

message fectingUserAppointMentsRequestt{
  string email = 1;
  int32 page = 2;     
  int32 limit = 3;       
}

message fetchingUserAppointmentsResponsee {
  repeated Appointment appointments = 1;
  bool success = 2;
  string message = 3;
  int32 currentPage = 4;    
  int32 totalPages = 5;
  int32 totalAppointments = 6;
  int32 limit = 7;
  bool hasNextPage = 8;
  bool hasPrevPage = 9;
}



message StoreAppointMentRequest {
  string patientName = 1;           
  string patientEmail = 2;           
  string patientPhone = 3;          
  string appointmentDate = 4;            
  string appointmentTime = 5;           
  string notes = 6;           
  string doctorName = 7;          
  string specialty = 8;       
  string userEmail = 9; 
  string userId = 10; 
  string doctorId = 11; 
       
}

message StoreAppointMentResponse {
  bool success = 1;           
  string message = 2;         
  string appointment_id = 3;  
}

message fetchingAppontMentSlotesRequest {
  string email = 1;
}

message SlotInfo {
  string id = 1;
  string time = 2;
  bool is_booked = 3;
}

message DateSlots {
  string date = 1;
  repeated SlotInfo slots = 2;
}

message fetchingAppontMentSlotesResponse {
  bool success = 1;
  int32 slots_created = 2;
  repeated string dates = 3;
  repeated DateSlots time_slots = 4; 
}

message fetchingDoctorSlotsRequest {
  string email = 1;
}

message fetchingDoctorSlotsResponse {
   bool success = 1;
   string message = 2;
   int32 slots_created = 3;
   repeated string dates = 4;
   repeated AppointmentSlot slots = 5;
}

message TimeSlot {
  string date = 1;
  repeated string slots = 2;
}

message Time {
  string date = 1;
  repeated string slots = 2;
  string time = 3;
  string type = 4;
}

message RemainingSlot {
  string id = 1;
  string date = 2;
  string time = 3;
}

message StoreAppointmentSlotsRequest {
  string doctor_email = 1;
  string date_range = 2;
  repeated string selected_dates = 3;
  repeated TimeSlot time_slots = 4;
  string action = 5;
  repeated string removed_slot_ids = 6;
  repeated RemainingSlot remaining_slots = 7;
  repeated Time new_time_slots = 8;  
  string start_time = 9;                 
  string end_time = 10;
  int32 slot_duration = 11;
  bool include_rest_periods = 12;
}

message StoreAppointmentSlotsResponse {
  bool success = 1;
  string message = 2;
  int32 slots_created = 3;
  repeated string dates = 4;
  int32 slots_removed = 5;
  int32 slots_updated = 6;
  int32 new_slots_created = 7;
}



message AppointmentSlot {
  string id = 1;
  string doctor_id = 2;
  string date = 3;
  string time = 4;
  bool is_booked = 5;
  string patientEmail = 6; 
}